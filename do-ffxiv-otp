#!/usr/bin/env python3

import os
import hmac
import hashlib
import time
import struct
import base64
import socket
import urllib.request

def get_hotp_token(secret, intervals_no):
    key = base64.b32decode(secret, True)
    msg = struct.pack(">Q", intervals_no)
    h = hmac.new(key, msg, hashlib.sha1).digest()
    o = h[19] & 15
    h = struct.unpack('>I', h[o:o+4])[0] & 0x7fffffff
    return h % 1000000

def get_totp_token(secret):
    return get_hotp_token(secret, intervals_no=int(time.time())//30)

def send_request(url):
    try:
        with urllib.request.urlopen(url) as response:
            print(f"Request sent to {url}")
            print(f"Response status: {response.status}")
            return response.status == 200
    except Exception as e:
        print(f"An error occurred: {e}")
        return False

# Read the secret from the file
home = os.path.expanduser("~")
secret_file = os.path.join(home, ".config", "ffxiv-otp-secret")

with open(secret_file, 'r') as f:
    secret = f.read().strip()

# Get hostname
hostname = socket.gethostname()

# Main loop
for attempt in range(60):
    # Generate TOTP
    totp = str(get_totp_token(secret)).zfill(6)

    # Construct URL
    url = f"http://{hostname}:4646/ffxivlauncher/{totp}"

    print(f"Attempt {attempt + 1}:")
    print(f"Generated TOTP: {totp}")
    if send_request(url):
        print("Request successful!")
    else:
        print("Request failed. Retrying in 1 second...")
    time.sleep(1)
